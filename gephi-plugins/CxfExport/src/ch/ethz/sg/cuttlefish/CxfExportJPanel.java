/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CxfExportJPanel.java
 *
 * Created on Dec 29, 2011, 2:17:01 PM
 */
package ch.ethz.sg.cuttlefish;

/**
 *
 * @author ptsankov
 */
public class CxfExportJPanel extends javax.swing.JPanel {

    /** Creates new form CxfExportJPanel */
    public CxfExportJPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exportLabel = new javax.swing.JLabel();
        nodeLabel = new javax.swing.JCheckBox();
        nodeColor = new javax.swing.JCheckBox();
        nodeCoordinates = new javax.swing.JCheckBox();
        nodeSize = new javax.swing.JCheckBox();
        edgeLabel = new javax.swing.JCheckBox();
        edgeColor = new javax.swing.JCheckBox();
        edgeWeight = new javax.swing.JCheckBox();
        edgeWidth = new javax.swing.JCheckBox();
        scalingParametersLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        nodeSizeParamLabel = new javax.swing.JLabel();
        nodeParam = new javax.swing.JTextField();
        edgeWidthParamLabel = new javax.swing.JLabel();
        edgeParam = new javax.swing.JTextField();
        coordinatesLabel = new javax.swing.JLabel();
        coordinatesParam = new javax.swing.JTextField();

        exportLabel.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.exportLabel.text")); // NOI18N

        nodeLabel.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.nodeLabel.text")); // NOI18N
        nodeLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nodeLabelActionPerformed(evt);
            }
        });

        nodeColor.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.nodeColor.text")); // NOI18N
        nodeColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nodeColorActionPerformed(evt);
            }
        });

        nodeCoordinates.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.nodeCoordinates.text")); // NOI18N
        nodeCoordinates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nodeCoordinatesActionPerformed(evt);
            }
        });

        nodeSize.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.nodeSize.text")); // NOI18N
        nodeSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nodeSizeActionPerformed(evt);
            }
        });

        edgeLabel.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.edgeLabel.text")); // NOI18N
        edgeLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edgeLabelActionPerformed(evt);
            }
        });

        edgeColor.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.edgeColor.text")); // NOI18N
        edgeColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edgeColorActionPerformed(evt);
            }
        });

        edgeWeight.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.edgeWeight.text")); // NOI18N
        edgeWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edgeWeightActionPerformed(evt);
            }
        });

        edgeWidth.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.edgeWidth.text")); // NOI18N
        edgeWidth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edgeWidthActionPerformed(evt);
            }
        });

        scalingParametersLabel.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.scalingParametersLabel.text")); // NOI18N

        nodeSizeParamLabel.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.nodeSizeParamLabel.text")); // NOI18N

        nodeParam.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.nodeParam.text")); // NOI18N

        edgeWidthParamLabel.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.edgeWidthParamLabel.text")); // NOI18N

        edgeParam.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.edgeParam.text")); // NOI18N

        coordinatesLabel.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.coordinatesLabel.text")); // NOI18N

        coordinatesParam.setText(org.openide.util.NbBundle.getMessage(CxfExportJPanel.class, "CxfExportJPanel.coordinatesParam.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nodeSize)
                            .addComponent(nodeCoordinates)
                            .addComponent(nodeColor)
                            .addComponent(nodeLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(edgeWidth)
                            .addComponent(edgeWeight)
                            .addComponent(edgeColor)
                            .addComponent(edgeLabel))
                        .addContainerGap())
                    .addComponent(exportLabel)))
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scalingParametersLabel)
                .addContainerGap(141, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(edgeWidthParamLabel)
                    .addComponent(nodeSizeParamLabel)
                    .addComponent(coordinatesLabel))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nodeParam, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                    .addComponent(edgeParam)
                    .addComponent(coordinatesParam))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exportLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(edgeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edgeColor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edgeWeight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edgeWidth))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nodeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nodeColor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nodeCoordinates)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nodeSize)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scalingParametersLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nodeSizeParamLabel)
                    .addComponent(nodeParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edgeWidthParamLabel)
                    .addComponent(edgeParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coordinatesLabel)
                    .addComponent(coordinatesParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nodeLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nodeLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nodeLabelActionPerformed

    private void nodeColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nodeColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nodeColorActionPerformed

    private void nodeCoordinatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nodeCoordinatesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nodeCoordinatesActionPerformed

    private void nodeSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nodeSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nodeSizeActionPerformed

    private void edgeLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edgeLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edgeLabelActionPerformed

    private void edgeColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edgeColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edgeColorActionPerformed

    private void edgeWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edgeWeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edgeWeightActionPerformed

    private void edgeWidthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edgeWidthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edgeWidthActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel coordinatesLabel;
    private javax.swing.JTextField coordinatesParam;
    private javax.swing.JCheckBox edgeColor;
    private javax.swing.JCheckBox edgeLabel;
    private javax.swing.JTextField edgeParam;
    private javax.swing.JCheckBox edgeWeight;
    private javax.swing.JCheckBox edgeWidth;
    private javax.swing.JLabel edgeWidthParamLabel;
    private javax.swing.JLabel exportLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JCheckBox nodeColor;
    private javax.swing.JCheckBox nodeCoordinates;
    private javax.swing.JCheckBox nodeLabel;
    private javax.swing.JTextField nodeParam;
    private javax.swing.JCheckBox nodeSize;
    private javax.swing.JLabel nodeSizeParamLabel;
    private javax.swing.JLabel scalingParametersLabel;
    // End of variables declaration//GEN-END:variables
    public void setup(CxfExport exporter) {
        //setup the panel
        nodeLabel.setSelected(exporter.exportNodeLabel());
        nodeColor.setSelected(exporter.exportNodeColor());
        nodeSize.setSelected(exporter.exportNodeSize());
        nodeCoordinates.setSelected(exporter.exportNodePosition());
        edgeColor.setSelected(exporter.exportEdgeColor());
        edgeLabel.setSelected(exporter.exportEdgeLabel());
        edgeWeight.setSelected(exporter.exportEdgeWeight());
        edgeWidth.setSelected(exporter.exportEdgeWidth());
        nodeParam.setText(Double.toString(exporter.getNodeScaleFactor()));
        edgeParam.setText(Double.toString(exporter.getEdgeScaleFactor()));
        coordinatesParam.setText(Double.toString(exporter.getCoordinatesScaleFactor()));
    }
    
    public void unsetup(CxfExport exporter) {
        //store the options to the exporter object
        exporter.setExportNodeLabel(nodeLabel.isSelected());
        exporter.setExportNodeColor(nodeColor.isSelected());
        exporter.setExportNodeSize(nodeSize.isSelected());
        exporter.setExportNodePosition(nodeCoordinates.isSelected());
        exporter.setExportEdgeColor(edgeColor.isSelected());
        exporter.setExportEdgeLabel(edgeLabel.isSelected());
        exporter.setExportEdgeWeight(edgeWeight.isSelected());
        exporter.setExportEdgeWidth(edgeWidth.isSelected());
        exporter.setNodeScaleFactor(Double.parseDouble(nodeParam.getText()));
        exporter.setEdgeScaleFactor(Double.parseDouble(edgeParam.getText()));        
        exporter.setCoordinatesScaleFactor(Double.parseDouble(coordinatesParam.getText()));
    }

}
